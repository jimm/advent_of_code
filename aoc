#!/bin/bash
#
# Advent of code launcher.

usage() {
    cat <<EOS
usage: $(basename $0) [-m] [-y year] [-d day] [-l lang] [-L] [-t] [-h] part_num

  -m       Run \`makeup\` first (a personal cross-language build script)
  -a dir   Advent of Code root directory. Default is this script's directory
  -y year  Default is current year or, if negative, offset from
           current year (-1 == last year)
  -d day   Default is current day of the month or, if negative,
           offset from current day (for example, -1 == yesterday)
  -l lang  Required only if more than one lang for a year
  -L       List languages available for the year and exit
  -t       Testing
  -n       Print commands but do not run them
  -h       Print this help and exit
EOS
    exit "$1"
}

list_langs() {
    find . -type d -name "y$1" \
        | grep -v /data/y \
        | grep -v /test/y \
        | sed -e 's#^\./##' -e 's#/.*##'
}

find_lang_for_year() {
    langs=( $(list_langs $1) )
    if [[ ${#langs[@]} == 0 ]] ; then
        echo no languages found for year $1
        exit 1
    fi
    if [[ ${#langs[@]} > 1 ]] ; then
        echo too many languages found for year $1 >&2
        echo use -l option to specify language >&2
        echo use -L option to list available languages >&2
        exit 1
    fi
    echo ${langs[0]}
}

dir="$(cd $(dirname "$0") && pwd)"
this_year=$(date "+%Y")
year=$this_year
today=$(date "+%d" | sed -e 's/^0//')
day=$today
makeup=0
list_langs=no
lang=""
testing=""
no_execute=""

while getopts "may:d:l:Ltnh" opt ; do
    case $opt in
        m) makeup=1 ;;
        a) dir="$OPTARG" ;;
        y)
            year="$OPTARG"
            if [ $year -le 0 ] ; then
                year=$(( this_year + year ))
            fi
            ;;
        d)
            day="$OPTARG"
            if [ $day -le 0 ] ; then
                day=$(( today + day ))
            fi
            ;;
        l) lang="$OPTARG" ;;
        L) list_langs=yes ;;
        t) testing=1 ;;
        n) no_execute="echo" ;;
        h) usage 0 ;;
        *) usage 1 ;;
    esac
done
shift $((OPTIND-1))
part_num=$1
if [ -z "$part_num" ] && [ $list_langs = "no" ] ; then
    usage 1
fi

cd $dir

if [ $list_langs = "yes" ] ; then
    list_langs $year
    exit 0
fi

if [ -z "$lang" ] ; then
    lang=$(find_lang_for_year $year $lang)
fi

cd $dir/$lang
if [ $makeup == 1 ] ; then
    makeup || exit 1
fi
case $lang in
    crystal)
        if [ -n "$testing" ] ; then
            testing="-t"
        fi
        $no_execute bin/aoc -y $year -d $day $testing $part_num
    ;;
    elixir)
        day=$(printf '%02d' $day)
        test=""
        if [ -n "$testing" ] ; then
            test="_test"
        fi
        $no_execute iex -S mix <<EOS
Y$year.Day$day.run$part_num$test
System.halt(0)
EOS
    ;;
    lisp)
        cd y$year
        day=$(printf '%02d' $day)
        test=""
        part="part"
        if [ -n "$testing" ] ; then
            test="test-"
        fi
        if [ $year = "2017" ] && ( [ $day = "10" ] || [ $day = "14" ] ) ; then
            part="day${day}-part"
        fi
        $no_execute sbcl <<EOS
(load "../utils.lisp")
(load "day$day.lisp")
(${test}${part}${part_num})
EOS
    ;;
    python)
        if [ -n "$testing" ] ; then
            testing="-t"
        fi
        $no_execute ./aoc.py -y $year -d $day $testing $part_num
        ;;
    ruby)
        if [ -n "$testing" ] ;then
            testing="-t"
        fi
        $no_execute ./aoc.rb -y $year -d $day $testing $part_num
        ;;
esac
